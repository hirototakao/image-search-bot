import { ChatPostMessageArguments, ChatPostMessageResponse } from '@slack/web-api';
import { MessageAttachment } from '@slack/types';
export interface SayArguments {
    text?: string;
    channel?: string;
    blocks?: Record<string, any>[];
    attachments?: MessageAttachment[];
}
export interface SayFn {
    (message: string | ChatPostMessageArguments): Promise<ChatPostMessageResponse>;
}
export interface RespondArguments extends SayArguments {
    /** Response URLs can be used to send ephemeral messages or in-channel messages using this argument */
    response_type?: 'in_channel' | 'ephemeral';
    replace_original?: boolean;
    delete_original?: boolean;
}
export interface RespondFn {
    (message: string | RespondArguments): Promise<any>;
}
export interface AckFn<Response> {
    (response?: Response): Promise<void>;
}
//# sourceMappingURL=utilities.d.ts.map